@model GroupViewModel

@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer

@{
    ViewBag.Title = Model.GroupName;
}


<div>

    <h3> @Localizer["groupName"] - @Model.GroupName </h3>
    <hr />



    @if (ViewBag.FreeCarsCount > 0)
    {
        <span>@Localizer["ableCars"]:</span>
        <hr />
        @foreach (var freecar in ViewBag.FreeCars)
        {
            <hr />
            <label> @freecar.CarModel | @freecar.RegistrationNumber | <a asp-controller="Groups" asp-action="AddCarToGroup" asp-route-idCar="@freecar.IdCar" asp-route-idGroup="@Model.IdGroup">@Localizer["addToGroup"]</a> </label>
            <hr />
        }
    }


    <p>
        <a asp-controller="Groups" asp-action="GetOptimalCargoForGroup" asp-route-idGroup="@Model.IdGroup">@Localizer["optiCagros"]</a>
    </p>


    @if (Model.Cars.Count() == 0)
    {
        <span>@Localizer["none"]</span>
    }
    else
    {
        <span>@Localizer["carList"]:</span>
        <hr />
        <h4>@Localizer["carName"]  | @Localizer["cargoNumb"] | @Localizer["editGroup"]</h4>
        @foreach (var cr in Model.Cars)
        {
            <hr />
            <span> @cr.CarModel </span> <span> | </span>
            <span> @cr.RegistrationNumber </span> <span> | </span>
            <a asp-controller="Groups" asp-action="DeleteCarFromGroup" asp-route-idCar="@cr.IdCar"> @Localizer["deleteCar"]</a>
            <hr />
        }

    }
    <a asp-controller="Groups" asp-action="DeleteGroup" asp-route-id="@Model.IdGroup">@Localizer["deleteGroup"]</a>
</div>