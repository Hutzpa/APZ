@model OptimalCargoViewModel

@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer

        
<p>
    <label>@Localizer["groupName"]- @Model.OurGroup.GroupName</label>
</p>

@if (Model.Cargos.Count() == 0)
{
<label>@Localizer["none"]</label>
}
else
{
    <ul>
        @foreach (Cargo cr in Model.Cargos)
        {
            <li>
                <form asp-controller="Request" asp-action="CreateCompanyToUser" method="post" enctype="multipart/form-data">
                    <input asp-for="@cr.Id_Cargo" type="hidden" />
                    <input asp-for="@Model.OurGroup.IdOwner" type="hidden" />
                    <input asp-for="@Model.OurGroup.IdGroup" type="hidden" />


                    <label>
                        @Localizer["name"] - @cr.CargoName | @Localizer["cargoType"] - @cr.CargoType | @Localizer["dest"] - @cr.DestinationPoint | @Localizer["weight"] - @cr.Weight | @Localizer["bulk"] - @cr.Bulk |
                    </label>

                    <input class="btn btn-success" type="submit" value="@Localizer["ofer"]" />
                </form>
            </li>
        }
    </ul>

}
