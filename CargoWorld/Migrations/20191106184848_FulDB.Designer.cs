// <auto-generated />
using System;
using CargoWorld.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CargoWorld.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20191106184848_FulDB")]
    partial class FulDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CargoWorld.Models.Car", b =>
                {
                    b.Property<int>("IdCar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CarModel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarcassNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CargoType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CarryingCapacity")
                        .HasColumnType("int");

                    b.Property<double>("CarryingCapacitySqM")
                        .HasColumnType("float");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CostPerKm")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double>("HeightCargoCompartment")
                        .HasColumnType("float");

                    b.Property<int>("IdDriver")
                        .HasColumnType("int");

                    b.Property<double>("LengthCargoCompartment")
                        .HasColumnType("float");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistrationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("WidthCargoCompartment")
                        .HasColumnType("float");

                    b.HasKey("IdCar");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("CargoWorld.Models.Cargo", b =>
                {
                    b.Property<int>("Id_Cargo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CargoName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CargoType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeparturePoint")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DestinationPoint")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Height")
                        .HasColumnType("float");

                    b.Property<bool>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<double>("Length")
                        .HasColumnType("float");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.Property<double>("Width")
                        .HasColumnType("float");

                    b.HasKey("Id_Cargo");

                    b.ToTable("Cargos");
                });

            modelBuilder.Entity("CargoWorld.Models.CargoInCar", b =>
                {
                    b.Property<int>("Id_Delivery")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AmountOfCarog")
                        .HasColumnType("int");

                    b.Property<int?>("Id_CarIdCar")
                        .HasColumnType("int");

                    b.Property<int?>("Id_Cargo1")
                        .HasColumnType("int");

                    b.HasKey("Id_Delivery");

                    b.HasIndex("Id_CarIdCar");

                    b.HasIndex("Id_Cargo1");

                    b.ToTable("CargoInCars");
                });

            modelBuilder.Entity("CargoWorld.Models.Group", b =>
                {
                    b.Property<int>("IdGroup")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CarIdCar")
                        .HasColumnType("int");

                    b.HasKey("IdGroup");

                    b.HasIndex("CarIdCar");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("CargoWorld.Models.User", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int?>("CargoId_Cargo")
                        .HasColumnType("int");

                    b.Property<string>("Geoposition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GroupIdGroup")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Patronymic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserRole")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUser");

                    b.HasIndex("CargoId_Cargo");

                    b.HasIndex("GroupIdGroup");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CargoWorld.Models.CargoInCar", b =>
                {
                    b.HasOne("CargoWorld.Models.Car", "Id_Car")
                        .WithMany()
                        .HasForeignKey("Id_CarIdCar");

                    b.HasOne("CargoWorld.Models.Cargo", "Id_Cargo")
                        .WithMany()
                        .HasForeignKey("Id_Cargo1");
                });

            modelBuilder.Entity("CargoWorld.Models.Group", b =>
                {
                    b.HasOne("CargoWorld.Models.Car", null)
                        .WithMany("IdGroup")
                        .HasForeignKey("CarIdCar");
                });

            modelBuilder.Entity("CargoWorld.Models.User", b =>
                {
                    b.HasOne("CargoWorld.Models.Cargo", null)
                        .WithMany("Id_Owner")
                        .HasForeignKey("CargoId_Cargo");

                    b.HasOne("CargoWorld.Models.Group", null)
                        .WithMany("IdOwner")
                        .HasForeignKey("GroupIdGroup");
                });
#pragma warning restore 612, 618
        }
    }
}
